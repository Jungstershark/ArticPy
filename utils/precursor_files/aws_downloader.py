"""AWS"""
# -------------------------------------------------------------------------------------------------------------------- #
# |                                         IMPORT RELEVANT LIBRARIES                                                | #
# -------------------------------------------------------------------------------------------------------------------- #
import os

import boto3
import botocore
import streamlit as st

# -------------------------------------------------------------------------------------------------------------------- #
# |                                             GLOBAL VARIABLES                                                     | #
# -------------------------------------------------------------------------------------------------------------------- #
AWS_ACCESS_KEY_ID = 'AKIAXID75GFQW2WISBGA'
AWS_SECRET_ACCESS_KEY = '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'
AWS_BUCKET_NAME = 'codechallengebucket'
AWS_OBJECT_KEY = '100k_news.csv'
AWS_FILE_NAME = os.path.join(os.getcwd(), 'file.csv')
# AWS_SESSION_TOKEN = None


# -------------------------------------------------------------------------------------------------------------------- #
# |                                           MAIN DOWNLOADER CLASS                                                  | #
# -------------------------------------------------------------------------------------------------------------------- #
class AWSDownloader:
    """
    This class manages the downloading of files stored on AWS

    This class only permits you to download files from a blob, one at a time. No threading is enabled on this class.

    Global Variables
    ----------------
    AWS_ACCESS_KEY_ID:                  The Access Key ID that is generated by AWS when creating a new user in the
                                        Management Console
    AWS_SECRET_ACCESS_KEY:              The Secret Access Key that is generated by AWS when creating a new user in the
                                        Management Console, is found on the same page as AWS_ACCESS_KEY_ID
    AWS_BUCKET_NAME:                    The name of the bucket which the data is stored
    AWS_OBJECT_KEY:                     The object key to the bucket
    AWS_FILE_NAME:                      The filename of of the file of interest
    ----------------
    """

    def __init__(self):
        """
        Establishes a connection with AWS and authenticates the user
        """

        global AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_BUCKET_NAME, AWS_OBJECT_KEY, AWS_FILE_NAME

        if st.checkbox('Use Alternative S3 Bucket and File Parameters'):
            st.title('AWS Downloader')
            AWS_BUCKET_NAME = st.text_input('Bucket Name')
            AWS_OBJECT_KEY = st.text_input('S3 Object Key')
            AWS_FILE_NAME = st.text_input('Filename with extension; note that the file will always be saved in the '
                                          'current working directory')
        if st.checkbox('Advanced Options'):
            AWS_ACCESS_KEY_ID = st.text_input('AWS Access Key')
            AWS_SECRET_ACCESS_KEY = st.text_input('AWS Secret Access Key')

        st.info('Loading Credentials...')
        os.environ['AWS_ACCESS_KEY_ID'] = AWS_ACCESS_KEY_ID
        os.environ['AWS_SECRET_ACCESS_KEY'] = AWS_SECRET_ACCESS_KEY
        st.success('Credentials Loaded!')

    def downloadFile(self):
        """
        File downloader
        """

        global AWS_BUCKET_NAME, AWS_OBJECT_KEY, AWS_FILE_NAME

        # INSTANTIATE THE RESOURCE OBJECT
        s3Session = boto3.resource('s3')

        # ATTEMPT TO DOWNLOAD
        try:
            s3Session.Bucket(AWS_BUCKET_NAME).download_file(AWS_OBJECT_KEY, AWS_FILE_NAME)
        except botocore.exceptions.ClientError as e:
            if e.response['Error']['Code'] == "404":
                st.error('File does not exist.')
        else:
            st.success(f'File {AWS_FILE_NAME} Downloaded!')
